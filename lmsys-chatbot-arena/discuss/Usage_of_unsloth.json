{
    "main_topic": {
        "author": "Varun Jagannath",
        "title": "Usage of unsloth",
        "content": "Has anyone used unsloth in the competition as it says that training and inferencing is much with it. Looking forward for suggestions.\n\n",
        "date": "Mon Jul 08 2024 01:16:33 GMT+0900 (日本標準時)",
        "votes": "0"
    },
    "comments": [
        {
            "author": "Ivan Vybornov",
            "content": "They do not have kernels for classifier yet.\n\n",
            "date": "Posted a month ago  ·  159th in this Competition",
            "votes": "0",
            "reply": [
                {
                    "author": "Cristóbal Mackenzie",
                    "content": "Exactly, and I think the \"axolotl\" library which is also being very widely used doesn't support classification models yet.\n\n",
                    "date": "Posted a month ago  ·  215th in this Competition",
                    "votes": "0",
                    "reply": []
                },
                {
                    "author": "Varun JagannathTopic Author",
                    "content": "ok, thanks for the input. But do you think it would be too much of a task if we give prompts and then ask model to predict the classes.\n\n",
                    "date": "Posted a month ago  ·  1293rd in this Competition",
                    "votes": "-2",
                    "reply": []
                },
                {
                    "author": "Takamichi Toda",
                    "content": "In the CausalLM header can use the probabilities of generation of tokens A, B and tie as predictions.\n\n```\ninputs = tokenizer(text)\nout = model(inputs)\npred_token_id = tokenizer.encode(\"A\") + tokenizer.encode(\"B\") + tokenizer.encode(\"tie\")\npred = out.logits[0, -1, pred_token_id].softmax(0)\n\n```\n\n",
                    "date": "Posted 19 days ago  ·  146th in this Competition",
                    "votes": "3",
                    "reply": [
                        {
                            "author": "Varun JagannathTopic Author",
                            "content": "Tried this method as well, but it always predicts or weighs towards one class. Even I have checked your notebook. Model A is always having higher weight. I guess the classification head is working well in this competition.\n\n",
                            "date": "Posted 17 days ago  ·  1293rd in this Competition",
                            "votes": "2",
                            "reply": []
                        },
                        {
                            "author": "Takamichi Toda",
                            "content": "In my experiment as well, the classification head has been producing better results so far. I am currently in the process of trial and error to see if improvements can be made with fine-tuning (in [this discussion](https://www.kaggle.com/competitions/lmsys-chatbot-arena/discussion/520470#2925128), it seems they were able to achieve 0.902 with the generation head).\n\n",
                            "date": "Posted 17 days ago  ·  146th in this Competition",
                            "votes": "1",
                            "reply": []
                        }
                    ]
                }
            ]
        }
    ]
}